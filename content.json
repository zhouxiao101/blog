{"meta":{"title":"记录","subtitle":"敲代码的小行家","description":"代码使我快乐","author":"周潇","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"数组去重","slug":"数组去重","date":"2018-06-28T07:59:58.549Z","updated":"2018-06-28T08:11:52.417Z","comments":true,"path":"2018/06/28/数组去重/","link":"","permalink":"http://yoursite.com/2018/06/28/数组去重/","excerpt":"","text":"方案一：遍历数组中的每一项，拿每一项和它后面的项依次比较，如果相同了，则把相同的这一项在原来数组中删除12345678910var ary=[1,1,2,2,3,3,4,2,2,2,2,2,3,3,3,4,4,4,1,1];for(var i=0;i&lt;ary.length-1;i++)&#123; var cur=ary[i]; for (var j=i+1;j&lt;ary.length;j++)&#123; if(cur==ary[j])&#123; ary.splice(j,1) j--; &#125; &#125;&#125; 方案二：利用indexOf来验证当前数组中是否包含某一项，包含把当前项删除掉(不兼容IE6~8)123456789101112var ary=[5,5,3,1,1,2,2,3,3,4,2,2,2,2,2,3,3,3,4,4,4,];for(var i=0;i&lt;ary.length;i++)&#123; var cur=ary[i]; var next=ary.slice(i+1); if(next.indexOf(cur)&gt;-1)&#123; ary.splice(i,1); i--; &#125;&#125;console.log(ary.sort(function(a,b)&#123; return a-b;&#125;)) 方案三：遍历数组中的每一项，把每一项作为新对象的属性名和属性值存储起来，例如：当前项1，对象中存储{1:1}在每一次向对象中存储之前，首先看一下原有对象中是否包含了这个属性(typeof obj[xxx]===&#39;undefined&#39;说明当前对象中没有xxx这个属性)，如果已经存在这个属性说明数组中的当前项是重复的(1-在原有数组中删除这一项 2-不再像对象中存储这个结果)，如果不存在，把当前项作为对象的属性名和属性值存储进去12345678910111213var ary=[5,5,3,1,1,2,2,3,3,4,2,2,2,2,2,3,3,3,4,4,4,];var obj=&#123;&#125;;for(var i=0;i&lt;ary.length;i++)&#123; var cur=ary[i]; if(typeof obj[cur]!=='undefined')&#123; ary[i]=ary[ary.length-1];//用splice删除当前项，会让后面所有项向前挪一位（用最后一项代替重复项，后面所有项不受影响） ary.length--;//删除数组最后一项 i--; continue; &#125; obj[cur]=cur;&#125; 方案四：相邻比较法，首先给数组进行排序，然后相邻两项比较，相同的话把后一项在数组中去掉 12345678910var ary=[5,5,3,1,1,2,2,3,3,4,2,2,2,2,2,3,3,3,4,4,4,];ary.sort(function(a,b)&#123; return a-b;&#125;)var aryCur=[ary[0]];for(var i=1;i&lt;ary.length;i++)&#123; if(ary[i]!==aryCur[aryCur.length-1])&#123; aryCur.push(ary[i]) &#125;&#125;","categories":[],"tags":[]},{"title":"","slug":"Array","date":"2018-06-28T07:56:24.575Z","updated":"2018-07-05T03:37:33.204Z","comments":true,"path":"2018/06/28/Array/","link":"","permalink":"http://yoursite.com/2018/06/28/Array/","excerpt":"","text":"title: 数组基础 类数组：类似于数组，但是不是数组1.通过getElementsByTagName获取的元素集合是类数组2.函数中的实参集合arguments也是类数组 for循环只能遍历到数组私有的一些属性，而for in 循环可以把一些自定义的公共属性也能遍历到 ####数组中的常用方法console.dir(Array.prototype)数组中的方法都定义在原型上，通过dir可以查看数组中的方法 12345678910111213141516171819202122232425262728293031//=&gt;增加1.push:向数组的末尾追加新内容 参数：一到多个，任何数据类型都可以 返回值：新增后数组的长度 原有数组发生改变2.unshift:向数组开头追加新内容 参数：需要追加的内容，可以是多个任何数据类型的值 返回值：新增后数组的长度 原有数组发生改变 3.把数组当做一个普通的对象，使用对象键值对的操作，给其设置新的属性（索引） ary[ary.length]=xxx 向数组的末尾追加了新的内容 //=&gt;删除1.pop:删除数组最后一项 参数：无 返回值：被删除的那一项 原有数组发生改变2.shift:删除数组第一项 参数：无 返回值：被删除的那一项 原数组发生改变3.把数组当做普通的对象操作 delete删除：delete ary[索引] 删除指定索引这一项 当前想被删除后，原有数组其它项的索引不会改变 当前数组的length也不会改变 ary.length--;删除数组最后一项 //=&gt; splice:数组中内置的方法，可以实现数组的增加，修改，删除 splice实现删除 splice(n,m)：从索引n开始删除m个 m不写是删除到数组的末尾，","categories":[],"tags":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/tags/前端/"},{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/tags/Hexo/"},{"name":"HTML","slug":"HTML","permalink":"http://yoursite.com/tags/HTML/"},{"name":"JavaScript","slug":"JavaScript","permalink":"http://yoursite.com/tags/JavaScript/"}]},{"title":"Hello World","slug":"hello-world","date":"2018-06-28T07:41:51.539Z","updated":"2018-06-28T07:41:51.540Z","comments":true,"path":"2018/06/28/hello-world/","link":"","permalink":"http://yoursite.com/2018/06/28/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}